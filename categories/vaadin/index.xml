<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vaadin on Tobias Bayer</title>
    <link>http://tobiasbayer.com/categories/vaadin/</link>
    <description>Recent content in Vaadin on Tobias Bayer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 Feb 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://tobiasbayer.com/categories/vaadin/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using Vaadin 7 with Clojure</title>
      <link>http://tobiasbayer.com/post/2013-02-12-using-vaadin-7-with-clojure/</link>
      <pubDate>Tue, 12 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://tobiasbayer.com/post/2013-02-12-using-vaadin-7-with-clojure/</guid>
      <description>&lt;p&gt;There are some good examples on how to compose a web application with Clojure and Vaadin &amp;lt; 7.
However, the web application bootstrapping process has changed for Vaadin 7.
In this post I will show you how to create a Clojure/Vaadin 7 web application.&lt;/p&gt;

&lt;p&gt;First we need a &lt;code&gt;web.xml&lt;/code&gt; file in &lt;code&gt;src/main/webapp/WEB-INF&lt;/code&gt; that defines the Vaadin servlet and parametrizes
it with our main UI class.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #007020&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;web-app&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;xmlns=&amp;quot;http://java.sun.com/xml/ns/javaee&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #4070a0&#34;&gt;xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #4070a0&#34;&gt;xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #4070a0&#34;&gt;version=&amp;quot;2.5&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;display-name&amp;gt;&lt;/span&gt;Clojure Vaadin 7 Application&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/display-name&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;context-param&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Vaadin production mode&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;productionMode&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;false&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/context-param&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;Clojure Vaadin 7 Application&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;servlet-class&amp;gt;&lt;/span&gt;com.vaadin.server.VaadinServlet&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;description&amp;gt;&lt;/span&gt;Vaadin UI&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/description&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;UI&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;cljvaadin7.MyApplicationUI&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;Clojure Vaadin 7 Application&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/*&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;As there is no such thing as a class in Clojure, we will use its Java interoperability to create
a Java class that serves as our Vaadin UI main class.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;ns &lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;cljvaadin7.MyApplicationUI&lt;/span&gt;
  (&lt;span style=&#34;color: #007020&#34;&gt;import &lt;/span&gt;[&lt;span style=&#34;color: #bb60d5&#34;&gt;com.vaadin.ui&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;VerticalLayout&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;Label&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;Button&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;Button$ClickListener&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;Notification&lt;/span&gt;])
  (&lt;span style=&#34;color: #517918&#34;&gt;:gen-class&lt;/span&gt;
    &lt;span style=&#34;color: #517918&#34;&gt;:extends&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;com.vaadin.ui.UI&lt;/span&gt;))
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;&lt;code&gt;:gen-class&lt;/code&gt; will make the namespace available as a Java class.&lt;/p&gt;

&lt;p&gt;We override the init method of &lt;code&gt;com.vaadin.ui.UI&lt;/code&gt;.
This is the entry point for our web application. &lt;code&gt;init&lt;/code&gt; in &lt;code&gt;com.vaadin.ui.UI&lt;/code&gt;
has only one argument (&lt;code&gt;request&lt;/code&gt;). However, our Clojure &lt;code&gt;-init&lt;/code&gt; function has two arguments.
The reason is that the function will receive &amp;ldquo;&lt;code&gt;this&lt;/code&gt;&amp;rdquo; as the first argument.
Now we can build our UI.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;defn- &lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;create-button&lt;/span&gt;
  [&lt;span style=&#34;color: #bb60d5&#34;&gt;caption&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;action&lt;/span&gt;]
  (&lt;span style=&#34;color: #007020&#34;&gt;doto &lt;/span&gt;(&lt;span style=&#34;color: #06287e&#34;&gt;Button.&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;caption&lt;/span&gt;) (&lt;span style=&#34;color: #06287e&#34;&gt;add-action&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;action&lt;/span&gt;)))

(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;defn- &lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;create-main-layout&lt;/span&gt;
  []
  (&lt;span style=&#34;color: #007020&#34;&gt;doto &lt;/span&gt;(&lt;span style=&#34;color: #06287e&#34;&gt;VerticalLayout.&lt;/span&gt;)
	        (&lt;span style=&#34;color: #06287e&#34;&gt;.addComponent&lt;/span&gt; (&lt;span style=&#34;color: #06287e&#34;&gt;Label.&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;Hello Clojure-Vaadin 7!&amp;quot;&lt;/span&gt;))
	        (&lt;span style=&#34;color: #06287e&#34;&gt;.addComponent&lt;/span&gt; (&lt;span style=&#34;color: #06287e&#34;&gt;create-button&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;Push me!&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;show-click-message&lt;/span&gt;))))

(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;defn &lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;-init&lt;/span&gt;
  [&lt;span style=&#34;color: #bb60d5&#34;&gt;main-ui&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;request&lt;/span&gt;]
  (&lt;span style=&#34;color: #007020&#34;&gt;doto &lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;main-ui&lt;/span&gt; (&lt;span style=&#34;color: #06287e&#34;&gt;.setContent&lt;/span&gt; (&lt;span style=&#34;color: #06287e&#34;&gt;create-main-layout&lt;/span&gt;))))
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;In Java, button actions are triggered by registering a click handler for the button. We have to do this in
Clojure as well but we will hide the actual &lt;code&gt;ClickListener&lt;/code&gt; and use a more functional approach.
We create a new function &lt;code&gt;add-action&lt;/code&gt; that expects a button and an action as arguments. &lt;code&gt;action&lt;/code&gt; can be any Clojure function
we want to be executed when the button is clicked.
The helper function &lt;code&gt;create-button-click-listener&lt;/code&gt; wraps a Vaadin &lt;code&gt;ClickListener&lt;/code&gt; around the &lt;code&gt;action&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;defn- &lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;show-click-message&lt;/span&gt;
  []
  (&lt;span style=&#34;color: #06287e&#34;&gt;Notification/show&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;Button clicked&amp;quot;&lt;/span&gt;))

(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;defn- &lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;create-button-click-listener&lt;/span&gt; 
  [&lt;span style=&#34;color: #bb60d5&#34;&gt;action&lt;/span&gt;]
  (&lt;span style=&#34;color: #06287e&#34;&gt;reify&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;Button$ClickListener&lt;/span&gt; 
            (&lt;span style=&#34;color: #06287e&#34;&gt;buttonClick&lt;/span&gt; 
              [&lt;span style=&#34;color: #bb60d5&#34;&gt;_&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;evt&lt;/span&gt;]
              (&lt;span style=&#34;color: #06287e&#34;&gt;action&lt;/span&gt;))))

(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;defn- &lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;add-action&lt;/span&gt;
  [&lt;span style=&#34;color: #bb60d5&#34;&gt;button&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;action&lt;/span&gt;]
  (&lt;span style=&#34;color: #06287e&#34;&gt;.addListener&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;button&lt;/span&gt; (&lt;span style=&#34;color: #06287e&#34;&gt;create-button-click-listener&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;action&lt;/span&gt;)))
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;The project file for building with Leiningen (and packaging with Maven) looks like this:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;defproject &lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;cljvaadin7&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;0.1.0-SNAPSHOT&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #517918&#34;&gt;:description&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;Demonstrates how to integrate Clojure and Vaadin 7&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #517918&#34;&gt;:url&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;https://github.com/codebrickie/cljvaadin7&amp;quot;&lt;/span&gt;
  &lt;span style=&#34;color: #517918&#34;&gt;:license&lt;/span&gt; {&lt;span style=&#34;color: #517918&#34;&gt;:name&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;Eclipse Public License&amp;quot;&lt;/span&gt;
            &lt;span style=&#34;color: #517918&#34;&gt;:url&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;http://www.eclipse.org/legal/epl-v10.html&amp;quot;&lt;/span&gt;}
  &lt;span style=&#34;color: #517918&#34;&gt;:dependencies&lt;/span&gt; [[&lt;span style=&#34;color: #bb60d5&#34;&gt;org.clojure/clojure&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;1.4.0&amp;quot;&lt;/span&gt;]
                 [&lt;span style=&#34;color: #bb60d5&#34;&gt;com.vaadin/vaadin-server&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;7.0.0&amp;quot;&lt;/span&gt;]
                 [&lt;span style=&#34;color: #bb60d5&#34;&gt;com.vaadin/vaadin-client-compiled&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;7.0.0&amp;quot;&lt;/span&gt;]
                 [&lt;span style=&#34;color: #bb60d5&#34;&gt;com.vaadin/vaadin-themes&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;7.0.0&amp;quot;&lt;/span&gt;]
                 [&lt;span style=&#34;color: #bb60d5&#34;&gt;javax.servlet/servlet-api&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;quot;2.5&amp;quot;&lt;/span&gt;]]
  &lt;span style=&#34;color: #517918&#34;&gt;:aot&lt;/span&gt; [&lt;span style=&#34;color: #bb60d5&#34;&gt;cljvaadin7.MyApplicationUI&lt;/span&gt;])
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;You can find the complete project on &lt;a href=&#34;https://github.com/codebrickie/cljvaadin7&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Integrating Vaadin 7 and Spring</title>
      <link>http://tobiasbayer.com/post/2012-11-11-integrating-vaadin-7-and-spring/</link>
      <pubDate>Sun, 11 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tobiasbayer.com/post/2012-11-11-integrating-vaadin-7-and-spring/</guid>
      <description>&lt;p&gt;I am currently building an administration interface for &lt;a href=&#34;http://tweetsqueue.com&#34;&gt;TweetsQueue&lt;/a&gt; with Vaadin 7.
Fortunately Spring integration for Vaadin 7 is available as a &lt;a href=&#34;http://vaadin.com/directory#addon/springvaadinintegration&#34;&gt;Vaadin add-on&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Only two simple steps are necessary to get full autowiring support for your Vaadin classes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Add the Spring integration as a dependency. Here&amp;rsquo;s the relevant excerpt of my &lt;code&gt;build.gradle&lt;/code&gt;:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;//...&lt;/span&gt;
repositories &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
	mavenRepo &lt;span style=&#34;color: #002070; font-weight: bold&#34;&gt;url:&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;http://repo1.maven.org/maven2/&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #002070; font-weight: bold&#34;&gt;artifactUrls:&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;http://maven.springframework.org/milestone&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;http://maven.vaadin.com/vaadin-addons&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #666666&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;


dependencies &lt;span style=&#34;color: #666666&#34;&gt;{&lt;/span&gt;
	&lt;span style=&#34;color: #666666&#34;&gt;...&lt;/span&gt;
	
	runtime &lt;span style=&#34;color: #4070a0&#34;&gt;&amp;#39;ru.xpoft.vaadin:spring-vaadin-integration:1.6.2&amp;#39;&lt;/span&gt;
	
	&lt;span style=&#34;color: #666666&#34;&gt;...&lt;/span&gt;
&lt;span style=&#34;color: #666666&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color: #666666&#34;&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Define the Spring integration servlet and your main UI bean in your &lt;code&gt;web.xml&lt;/code&gt;:
&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #007020&#34;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;web-app&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;id=&amp;quot;WebApp_ID&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;version=&amp;quot;2.4&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #4070a0&#34;&gt;xmlns=&amp;quot;http://java.sun.com/xml/ns/j2ee&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #4070a0&#34;&gt;xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot;&lt;/span&gt;
	&lt;span style=&#34;color: #4070a0&#34;&gt;xsi:schemaLocation=&amp;quot;http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd&amp;quot;&lt;/span&gt;&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;context-param&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;classpath*:applicationContext*.xml&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/context-param&amp;gt;&lt;/span&gt;

	&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;listener&amp;gt;&lt;/span&gt;
		&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;listener-class&amp;gt;&lt;/span&gt;org.springframework.web.context.ContextLoaderListener&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/listener-class&amp;gt;&lt;/span&gt;
	&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/listener&amp;gt;&lt;/span&gt;
	
	&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;VaadinServlet&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;servlet-class&amp;gt;&lt;/span&gt;ru.xpoft.vaadin.SpringVaadinServlet&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;beanName&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;&amp;lt;!-- &lt;/span&gt;
&lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;            	This is the name of your main Vaadin UI class.&lt;/span&gt;
&lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;            	You should declare it as a prototype-scoped component (e.g. @Component @Scope(&amp;quot;protoype&amp;quot;)).&lt;/span&gt;
&lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;            --&amp;gt;&lt;/span&gt;
            &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;mainUI&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt; 
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;

    &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;VaadinServlet&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/*&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color: #062873; font-weight: bold&#34;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;    
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can now autowire your views (declared as Spring beans) into your main ui class and display them as needed.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>