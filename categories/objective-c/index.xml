<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Objective C on Tobias Bayer</title>
    <link>http://tobiasbayer.com/categories/objective-c/</link>
    <description>Recent content in Objective C on Tobias Bayer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 16 Oct 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://tobiasbayer.com/categories/objective-c/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Switching Between Dock and Status Bar Mode in Cocoa</title>
      <link>http://tobiasbayer.com/post/2012-10-16-switching-between-dock-and-status-bar-mode-in-cocoa/</link>
      <pubDate>Tue, 16 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tobiasbayer.com/post/2012-10-16-switching-between-dock-and-status-bar-mode-in-cocoa/</guid>
      <description>&lt;p&gt;In this blog post I&amp;rsquo;ll show you how to make a Cocoa app that can switch between dock icon and statusbar icon mode.&lt;/p&gt;

&lt;p&gt;For the basics on how to create a statusbar app see &lt;a href=&#34;http://cocoatutorial.grapewave.com/2010/01/creating-a-status-bar-application&#34;&gt;Cocoa Tips and Tricks&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve tried several approaches to this topic but any other than the one I describe here had minor to major glitches such as not activating windows correctly when in statusbar mode for example.&lt;/p&gt;

&lt;p&gt;In order to work fine, your application has to be a statusbar app by default.
You achieve this by adding the key &lt;code&gt;LSUIElement&lt;/code&gt; with a value of &lt;code&gt;YES&lt;/code&gt; to your &lt;code&gt;&amp;lt;Application&amp;gt;-Info.plist&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now, when your application launches, check whether you want to display the statusbar icon or the dock icon. I do this based on the user&amp;rsquo;s preference in this example.&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;- (&lt;span style=&#34;color: #902000&#34;&gt;void&lt;/span&gt;)&lt;span style=&#34;color: #06287e&#34;&gt;applicationDidFinishLaunching:&lt;/span&gt;(&lt;span style=&#34;color: #007020&#34;&gt;NSNotification&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color: #bb60d5&#34;&gt;notification&lt;/span&gt; {
	&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color: #666666&#34;&gt;!&lt;/span&gt;[[&lt;span style=&#34;color: #007020&#34;&gt;NSUserDefaults&lt;/span&gt; standardUserDefaults] &lt;span style=&#34;color: #002070; font-weight: bold&#34;&gt;boolForKey&lt;/span&gt;:&lt;span style=&#34;color: #4070a0&#34;&gt;@&amp;quot;showDockIcon&amp;quot;&lt;/span&gt;]) {
		&lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;// Create a status item and display it in the statusbar&lt;/span&gt;
		&lt;span style=&#34;color: #007020&#34;&gt;self&lt;/span&gt;.statusItem &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; [[NSStatusBar systemStatusBar] &lt;span style=&#34;color: #002070; font-weight: bold&#34;&gt;statusItemWithLength&lt;/span&gt;:NSVariableStatusItemLength];
		[&lt;span style=&#34;color: #007020&#34;&gt;self&lt;/span&gt;.statusItem &lt;span style=&#34;color: #002070; font-weight: bold&#34;&gt;setMenu&lt;/span&gt;:&lt;span style=&#34;color: #007020&#34;&gt;self&lt;/span&gt;.statusBarMenu];
		[&lt;span style=&#34;color: #007020&#34;&gt;self&lt;/span&gt;.statusItem &lt;span style=&#34;color: #002070; font-weight: bold&#34;&gt;setHighlightMode&lt;/span&gt;:&lt;span style=&#34;color: #007020&#34;&gt;YES&lt;/span&gt;];
		[&lt;span style=&#34;color: #007020&#34;&gt;self&lt;/span&gt;.statusItem &lt;span style=&#34;color: #002070; font-weight: bold&#34;&gt;setImage&lt;/span&gt;:[NSImage &lt;span style=&#34;color: #002070; font-weight: bold&#34;&gt;imageNamed&lt;/span&gt;:&lt;span style=&#34;color: #4070a0&#34;&gt;@&amp;quot;barimage&amp;quot;&lt;/span&gt;]];
		[&lt;span style=&#34;color: #007020&#34;&gt;self&lt;/span&gt;.statusItem &lt;span style=&#34;color: #002070; font-weight: bold&#34;&gt;setAlternateImage&lt;/span&gt;:[NSImage &lt;span style=&#34;color: #002070; font-weight: bold&#34;&gt;imageNamed&lt;/span&gt;:&lt;span style=&#34;color: #4070a0&#34;&gt;@&amp;quot;barimage-highlighted&amp;quot;&lt;/span&gt;]];
	} &lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;else&lt;/span&gt; {
		&lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;// Bring the dock icon to the front (initially hidden with LSUIElement = YES in &amp;lt;Application&amp;gt;-Info.plist)&lt;/span&gt;
		ProcessSerialNumber psn &lt;span style=&#34;color: #666666&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color: #40a070&#34;&gt;0&lt;/span&gt;, kCurrentProcess };
		TransformProcessType(&lt;span style=&#34;color: #666666&#34;&gt;&amp;amp;&lt;/span&gt;psn, kProcessTransformToForegroundApplication);
	}
}
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ASIHTTPRequest and ARC</title>
      <link>http://tobiasbayer.com/post/2012-10-09-asihttprequest-and-arc/</link>
      <pubDate>Tue, 09 Oct 2012 00:00:00 +0000</pubDate>
      
      <guid>http://tobiasbayer.com/post/2012-10-09-asihttprequest-and-arc/</guid>
      <description>&lt;p&gt;I wanted to use &lt;a href=&#34;https://github.com/pokeb/asi-http-request&#34;&gt;ASIHTTPRequest&lt;/a&gt; in one of my OS X projects.
My project is ARC enabled. ASIHTTPRequest does not support ARC.
One solution would be to add all the &lt;code&gt;.h&lt;/code&gt; and &lt;code&gt;.m&lt;/code&gt; files from ASIHTTPRequest to your project and
set the &lt;code&gt;-fno-objc-arc flag&lt;/code&gt; for each &lt;code&gt;.m&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;I created a static library for ASIHTTPRequest and only added the &lt;code&gt;.h&lt;/code&gt; files to my project instead.
Then I also added the static library and made sure Xcode links against it in the linking
phase of the build.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://codebrickie.com/files/libASIMacLibrary.a&#34;&gt;Here&lt;/a&gt; is the static library for you to use in your own projects.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Suggested Reading</title>
      <link>http://tobiasbayer.com/post/2011-12-05-suggested-reading/</link>
      <pubDate>Mon, 05 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>http://tobiasbayer.com/post/2011-12-05-suggested-reading/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m going to post some links to interesting articles here every now and then.
Here&amp;rsquo;s the first bunch:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://lizkeogh.com/2011/11/20/scrum-and-kanban-both-the-same-only-different/&#34;&gt;Scrum and Kanban: both the same, only different&lt;/a&gt;&lt;br /&gt;
A nice comparison between Scrum and Kanban.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://sealedabstract.com/rants/why-software-projects-are-terrible-and-how-not-to-fix-them/&#34;&gt;Why Software Projects are Terrible and How Not To Fix Them&lt;/a&gt;&lt;br /&gt;
Best practices alone cannot make a difference.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://iphonedevelopertips.com/objective-c/introduction-to-blocks-in-objective-c-part-1.html&#34;&gt;Introduction to Blocks in Objective-C&lt;/a&gt;&lt;br /&gt;
A really comprehensive explanation of blocks in Objective-C.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>