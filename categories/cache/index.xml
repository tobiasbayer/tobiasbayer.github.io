<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cache on Tobias Bayer</title>
    <link>http://tobiasbayer.com/categories/cache/</link>
    <description>Recent content in Cache on Tobias Bayer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Nov 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://tobiasbayer.com/categories/cache/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Using Clojure&#39;s core.cache</title>
      <link>http://tobiasbayer.com/post/2014-11-12-using-clojures-core-dot-cache/</link>
      <pubDate>Wed, 12 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://tobiasbayer.com/post/2014-11-12-using-clojures-core-dot-cache/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/clojure/core.cache&#34;&gt;core.cache&lt;/a&gt; is a great Clojure library for caching
arbitrary values in your application. Unfortunately, its examples
have a minor dissent that can make it hard for a first time user to interact with it.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;The usage examples tell you to do this:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;def &lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;C&lt;/span&gt; (&lt;span style=&#34;color: #06287e&#34;&gt;cache/fifo-cache-factory&lt;/span&gt; {&lt;span style=&#34;color: #517918&#34;&gt;:a&lt;/span&gt; &lt;span style=&#34;color: #40a070&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #517918&#34;&gt;:b&lt;/span&gt; &lt;span style=&#34;color: #40a070&#34;&gt;2&lt;/span&gt;}))

(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color: #06287e&#34;&gt;cache/has?&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #517918&#34;&gt;:c&lt;/span&gt;)
  (&lt;span style=&#34;color: #06287e&#34;&gt;cache/hit&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #517918&#34;&gt;:c&lt;/span&gt;)
  (&lt;span style=&#34;color: #06287e&#34;&gt;cache/miss&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #517918&#34;&gt;:c&lt;/span&gt; &lt;span style=&#34;color: #40a070&#34;&gt;42&lt;/span&gt;))
  
&lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;; =&amp;gt; {:a 1, :b 2, :c 42}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;The naive first time user (that I was) could now assume that there&amp;rsquo;s some magic going
on behind the doors which does some state manipulation and another call to &lt;code&gt;(cache/has? C :c)&lt;/code&gt;
should return &lt;code&gt;true&lt;/code&gt;.
But as you guessed it: No magic to see here.&lt;/p&gt;

&lt;p&gt;The point is, that &lt;code&gt;cache/miss&lt;/code&gt; and &lt;code&gt;cache/hit&lt;/code&gt; return a &lt;strong&gt;new&lt;/strong&gt; cache instance with the new
value associated. You&amp;rsquo;ll have to do the state manipulation yourself (e.g. by using an atom):&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #f0f0f0&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;def &lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;C&lt;/span&gt; (&lt;span style=&#34;color: #06287e&#34;&gt;atom&lt;/span&gt; (&lt;span style=&#34;color: #06287e&#34;&gt;cache/fifo-cache-factory&lt;/span&gt; {&lt;span style=&#34;color: #517918&#34;&gt;:a&lt;/span&gt; &lt;span style=&#34;color: #40a070&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color: #517918&#34;&gt;:b&lt;/span&gt; &lt;span style=&#34;color: #40a070&#34;&gt;2&lt;/span&gt;})))

(&lt;span style=&#34;color: #007020; font-weight: bold&#34;&gt;if &lt;/span&gt;(&lt;span style=&#34;color: #06287e&#34;&gt;cache/has?&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #517918&#34;&gt;:c&lt;/span&gt;)
  (&lt;span style=&#34;color: #06287e&#34;&gt;swap!&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color: #06287e&#34;&gt;cache/hit&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #517918&#34;&gt;:c&lt;/span&gt;))
  (&lt;span style=&#34;color: #06287e&#34;&gt;swap!&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;#&lt;/span&gt;(&lt;span style=&#34;color: #06287e&#34;&gt;cache/miss&lt;/span&gt; &lt;span style=&#34;color: #bb60d5&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color: #517918&#34;&gt;:c&lt;/span&gt; &lt;span style=&#34;color: #40a070&#34;&gt;42&lt;/span&gt;)))

&lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;; =&amp;gt; {:a 1, :b 2, :c 42}&lt;/span&gt;

(&lt;span style=&#34;color: #06287e&#34;&gt;cache/has?&lt;/span&gt; &lt;span style=&#34;color: #666666&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color: #bb60d5&#34;&gt;C&lt;/span&gt; &lt;span style=&#34;color: #517918&#34;&gt;:c&lt;/span&gt;)

&lt;span style=&#34;color: #60a0b0; font-style: italic&#34;&gt;; =&amp;gt; true&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>